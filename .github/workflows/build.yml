name: force-a-habit

on:
  pull_request:
    branches: ["dev", "main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  notif_start:
    name: Send Discord In-progress Notification
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Send Discord In-progress Notification
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "username": "Bob",
            "embeds": [
              {
                "type": "rich",
                "title": "Code checking PR #${{ github.event.number }} on ${{ github.event.repository.name }}",
                "description": "#${{ github.event.number }}: ${{ github.event.pull_request.title }}\n\n${{ github.event.repository.name }}: ${{ github.event.pull_request.head.ref }} → ${{ github.event.pull_request.base.ref }}",
                "color": 13408512,
                "author": {
                  "name": "${{ github.event.pull_request.user.login }}",
                  "url": "${{ github.event.pull_request.user.html_url }}",
                  "icon_url": "${{ github.event.pull_request.user.avatar_url }}"
                },
                "url": "${{ github.event.pull_request.html_url }}",
                "fields": [
                  {
                    "name": "Description",
                    "value": "${{ github.event.pull_request.user.login == 'dependabot[bot]' && github.event.pull_request.title || github.event.pull_request.body || '\n' }}",
                    "inline": "false"
                  },
                  {
                    "name": "Status",
                    "value": "IN_PROGRESS",
                    "inline": "true"
                  },
                  {
                    "name": "Author",
                    "value": "${{ github.event.pull_request.user.login }}",
                    "inline": "true"
                  },
                  {
                    "name": "Files Affected",
                    "value": "${{ github.event.pull_request.changed_files }} files",
                    "inline": "false"
                  }
                ]
              }
            ]
          }' ${{ secrets.WEBHOOK_URL }}

  lint:
    name: Lint Debug Variant
    runs-on: ubuntu-latest
    needs: [ notif_start ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Execute Gradle command - lintDebug, ktlint, detekt
        run: |
          chmod +x ./run
          ./run lint

  test:
    name: Test Debug Variant
    runs-on: ubuntu-latest
    needs: [ notif_start ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Execute Gradle command - testDebugUnitTest
        run: ./gradlew clean testDebugUnitTest

  instrumentation_test:
    name: Instrumentation Test Debug Variant
    runs-on: ubuntu-latest
    needs: [ notif_start ]
    steps:
      - uses: actions/checkout@v3
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
      - name: Cache Android SDK
        uses: actions/cache@v3
        with:
          path: ~/.android
          key: ${{ runner.os }}-android-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-android-
      - name: Compile AndroidTests
        run: ./gradlew compileDebugAndroidTestKotlin
      - name: Start Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          arch: x86_64
          disable-animations: true
          script: ./gradlew connectedDebugAndroidTest

  notif_end:
    name: Send Discord End Notification
    runs-on: ubuntu-latest
    needs: [ lint, test, instrumentation_test ]
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v3
      - name: Set Job Status
        id: job-status
        run: |
          FAILED_JOBS=""
          if [[ "${{ needs.lint.result }}" == "failure" ]]; then
            FAILED_JOBS="${FAILED_JOBS}Lint Debug Variant\n"
          fi
          if [[ "${{ needs.test.result }}" == "failure" ]]; then
            FAILED_JOBS="${FAILED_JOBS}Test Debug Variant\n"
          fi
          if [[ "${{ needs.instrumentation_test.result }}" == "failure" ]]; then
            FAILED_JOBS="${FAILED_JOBS}Instrumentation Test Debug Variant\n"
          fi
          echo "failed_jobs=${FAILED_JOBS}" >> $GITHUB_ENV
      - name: Send Discord success notification
        if: ${{ env.failed_jobs == '' }}
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "username": "Bob",
            "embeds": [
              {
                "type": "rich",
                "title": "PR #${{ github.event.number }} on ${{ github.event.repository.name }} passed code check!",
                "description": "#${{ github.event.number }}: ${{ github.event.pull_request.title }}\n\n${{ github.event.repository.name }}: ${{ github.event.pull_request.head.ref }} → ${{ github.event.pull_request.base.ref }}",
                "color": 3381555,
                "author": {
                  "name": "${{ github.event.pull_request.user.login }}",
                  "url": "${{ github.event.pull_request.user.html_url }}",
                  "icon_url": "${{ github.event.pull_request.user.avatar_url }}"
                },
                "url": "${{ github.event.pull_request.html_url }}",
                "fields": [
                  {
                    "name": "Description",
                    "value": "${{ github.event.pull_request.user.login == 'dependabot[bot]' && github.event.pull_request.title || github.event.pull_request.body || '\n' }}",
                    "inline": "false"
                  },
                  {
                    "name": "Status",
                    "value": "SUCCESS",
                    "inline": "true"
                  },
                  {
                    "name": "Author",
                    "value": "${{ github.event.pull_request.user.login }}",
                    "inline": "true"
                  },
                  {
                    "name": "Files Affected",
                    "value": "${{ github.event.pull_request.changed_files }} files",
                    "inline": "false"
                  }
                ]
              }
            ]
          }' ${{ secrets.WEBHOOK_URL }}
      - name: Send Discord failed notification
        if: ${{ env.failed_jobs != '' }}
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "username": "Bob",
            "embeds": [
              {
                "type": "rich",
                "title": "PR #${{ github.event.number }} on ${{ github.event.repository.name }} hit a snag!",
                "description": "#${{ github.event.number }}: ${{ github.event.pull_request.title }}\n\n${{ github.event.repository.name }}: ${{ github.event.pull_request.head.ref }} → ${{ github.event.pull_request.base.ref }}",
                "color": 13369344,
                "author": {
                  "name": "${{ github.event.pull_request.user.login }}",
                  "url": "${{ github.event.pull_request.user.html_url }}",
                  "icon_url": "${{ github.event.pull_request.user.avatar_url }}"
                },
                "url": "${{ github.event.pull_request.html_url }}",
                "fields": [
                  {
                    "name": "Description",
                    "value": "${{ github.event.pull_request.user.login == 'dependabot[bot]' && github.event.pull_request.title || github.event.pull_request.body || '\n' }}",
                    "inline": "false"
                  },
                  {
                    "name": "Status",
                    "value": "FAILURE:\n${{ env.failed_jobs || 'ERROR' }}",
                    "inline": "true"
                  },
                  {
                    "name": "Author",
                    "value": "${{ github.event.pull_request.user.login }}",
                    "inline": "true"
                  },
                  {
                    "name": "Files Affected",
                    "value": "${{ github.event.pull_request.changed_files }} files",
                    "inline": "false"
                  }
                ]
              }
            ]
          }' ${{ secrets.WEBHOOK_URL }}
